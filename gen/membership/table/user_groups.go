//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var UserGroups = newUserGroupsTable("membership", "user_groups", "")

type userGroupsTable struct {
	mysql.Table

	// Columns
	ID        mysql.ColumnString
	CreatedAt mysql.ColumnTimestamp
	UpdatedAt mysql.ColumnTimestamp
	DeletedAt mysql.ColumnTimestamp
	UserID    mysql.ColumnString
	GroupID   mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type UserGroupsTable struct {
	userGroupsTable

	NEW userGroupsTable
}

// AS creates new UserGroupsTable with assigned alias
func (a UserGroupsTable) AS(alias string) *UserGroupsTable {
	return newUserGroupsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new UserGroupsTable with assigned schema name
func (a UserGroupsTable) FromSchema(schemaName string) *UserGroupsTable {
	return newUserGroupsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new UserGroupsTable with assigned table prefix
func (a UserGroupsTable) WithPrefix(prefix string) *UserGroupsTable {
	return newUserGroupsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new UserGroupsTable with assigned table suffix
func (a UserGroupsTable) WithSuffix(suffix string) *UserGroupsTable {
	return newUserGroupsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newUserGroupsTable(schemaName, tableName, alias string) *UserGroupsTable {
	return &UserGroupsTable{
		userGroupsTable: newUserGroupsTableImpl(schemaName, tableName, alias),
		NEW:             newUserGroupsTableImpl("", "new", ""),
	}
}

func newUserGroupsTableImpl(schemaName, tableName, alias string) userGroupsTable {
	var (
		IDColumn        = mysql.StringColumn("id")
		CreatedAtColumn = mysql.TimestampColumn("created_at")
		UpdatedAtColumn = mysql.TimestampColumn("updated_at")
		DeletedAtColumn = mysql.TimestampColumn("deleted_at")
		UserIDColumn    = mysql.StringColumn("user_id")
		GroupIDColumn   = mysql.StringColumn("group_id")
		allColumns      = mysql.ColumnList{IDColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, UserIDColumn, GroupIDColumn}
		mutableColumns  = mysql.ColumnList{CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, UserIDColumn, GroupIDColumn}
	)

	return userGroupsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		CreatedAt: CreatedAtColumn,
		UpdatedAt: UpdatedAtColumn,
		DeletedAt: DeletedAtColumn,
		UserID:    UserIDColumn,
		GroupID:   GroupIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
