//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Groups = newGroupsTable("membership", "groups", "")

type groupsTable struct {
	mysql.Table

	// Columns
	ID        mysql.ColumnString
	CreatedAt mysql.ColumnTimestamp
	UpdatedAt mysql.ColumnTimestamp
	DeletedAt mysql.ColumnTimestamp
	Name      mysql.ColumnString
	RoleID    mysql.ColumnString
	CompanyID mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type GroupsTable struct {
	groupsTable

	NEW groupsTable
}

// AS creates new GroupsTable with assigned alias
func (a GroupsTable) AS(alias string) *GroupsTable {
	return newGroupsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new GroupsTable with assigned schema name
func (a GroupsTable) FromSchema(schemaName string) *GroupsTable {
	return newGroupsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new GroupsTable with assigned table prefix
func (a GroupsTable) WithPrefix(prefix string) *GroupsTable {
	return newGroupsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new GroupsTable with assigned table suffix
func (a GroupsTable) WithSuffix(suffix string) *GroupsTable {
	return newGroupsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newGroupsTable(schemaName, tableName, alias string) *GroupsTable {
	return &GroupsTable{
		groupsTable: newGroupsTableImpl(schemaName, tableName, alias),
		NEW:         newGroupsTableImpl("", "new", ""),
	}
}

func newGroupsTableImpl(schemaName, tableName, alias string) groupsTable {
	var (
		IDColumn        = mysql.StringColumn("id")
		CreatedAtColumn = mysql.TimestampColumn("created_at")
		UpdatedAtColumn = mysql.TimestampColumn("updated_at")
		DeletedAtColumn = mysql.TimestampColumn("deleted_at")
		NameColumn      = mysql.StringColumn("name")
		RoleIDColumn    = mysql.StringColumn("role_id")
		CompanyIDColumn = mysql.StringColumn("company_id")
		allColumns      = mysql.ColumnList{IDColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, NameColumn, RoleIDColumn, CompanyIDColumn}
		mutableColumns  = mysql.ColumnList{CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, NameColumn, RoleIDColumn, CompanyIDColumn}
	)

	return groupsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		CreatedAt: CreatedAtColumn,
		UpdatedAt: UpdatedAtColumn,
		DeletedAt: DeletedAtColumn,
		Name:      NameColumn,
		RoleID:    RoleIDColumn,
		CompanyID: CompanyIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
