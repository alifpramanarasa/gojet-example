//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var CompanyEmailDomains = newCompanyEmailDomainsTable("membership", "company_email_domains", "")

type companyEmailDomainsTable struct {
	mysql.Table

	// Columns
	ID          mysql.ColumnString
	CreatedAt   mysql.ColumnTimestamp
	UpdatedAt   mysql.ColumnTimestamp
	DeletedAt   mysql.ColumnTimestamp
	CompanyID   mysql.ColumnString
	EmailDomain mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type CompanyEmailDomainsTable struct {
	companyEmailDomainsTable

	NEW companyEmailDomainsTable
}

// AS creates new CompanyEmailDomainsTable with assigned alias
func (a CompanyEmailDomainsTable) AS(alias string) *CompanyEmailDomainsTable {
	return newCompanyEmailDomainsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CompanyEmailDomainsTable with assigned schema name
func (a CompanyEmailDomainsTable) FromSchema(schemaName string) *CompanyEmailDomainsTable {
	return newCompanyEmailDomainsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CompanyEmailDomainsTable with assigned table prefix
func (a CompanyEmailDomainsTable) WithPrefix(prefix string) *CompanyEmailDomainsTable {
	return newCompanyEmailDomainsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CompanyEmailDomainsTable with assigned table suffix
func (a CompanyEmailDomainsTable) WithSuffix(suffix string) *CompanyEmailDomainsTable {
	return newCompanyEmailDomainsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCompanyEmailDomainsTable(schemaName, tableName, alias string) *CompanyEmailDomainsTable {
	return &CompanyEmailDomainsTable{
		companyEmailDomainsTable: newCompanyEmailDomainsTableImpl(schemaName, tableName, alias),
		NEW:                      newCompanyEmailDomainsTableImpl("", "new", ""),
	}
}

func newCompanyEmailDomainsTableImpl(schemaName, tableName, alias string) companyEmailDomainsTable {
	var (
		IDColumn          = mysql.StringColumn("id")
		CreatedAtColumn   = mysql.TimestampColumn("created_at")
		UpdatedAtColumn   = mysql.TimestampColumn("updated_at")
		DeletedAtColumn   = mysql.TimestampColumn("deleted_at")
		CompanyIDColumn   = mysql.StringColumn("company_id")
		EmailDomainColumn = mysql.StringColumn("email_domain")
		allColumns        = mysql.ColumnList{IDColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, CompanyIDColumn, EmailDomainColumn}
		mutableColumns    = mysql.ColumnList{CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, CompanyIDColumn, EmailDomainColumn}
	)

	return companyEmailDomainsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		CreatedAt:   CreatedAtColumn,
		UpdatedAt:   UpdatedAtColumn,
		DeletedAt:   DeletedAtColumn,
		CompanyID:   CompanyIDColumn,
		EmailDomain: EmailDomainColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
